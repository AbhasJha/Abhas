@model PaginatedList<string>


<table>
    <td>
        @foreach (var outputData in Model)
        {
            if (outputData.Equals("Buzz") || outputData.Equals("Wuzz"))
            {
                <li style="color : blue">@outputData</li>
            }
            else if (outputData.Equals("Fizz") || outputData.Equals("Wizz"))
            {
                <li style="color : green">@outputData</li>
            }
            else
            {
                <li>@outputData</li>
            }
        }
    </td>

</table>


@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Display"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Display"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   class="btn btn-default @nextDisabled">
    Next
</a>
<br>
@using (Html.BeginForm("Index", "FizzBuzz", FormMethod.Get))
{
    <input type="submit" value="New Input" />
}